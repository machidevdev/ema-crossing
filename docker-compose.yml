version: '3.8'

services:
  bot:
    build: .
    container_name: telegram-bot
    restart: unless-stopped
    networks:
      - app-network
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      BOT_TOKEN: ${BOT_TOKEN}
      TAAPI_API_KEY: ${TAAPI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15-alpine
    container_name: telegram-bot-db
    restart: unless-stopped
    networks:
      - app-network
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
    name: app-network
    driver: bridge

volumes:
  postgres_data:
    name: telegram-bot-postgres-data
